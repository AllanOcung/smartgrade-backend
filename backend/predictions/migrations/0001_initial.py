# Generated by Django 5.2.3 on 2025-07-01 14:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('student_data', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model_type', models.CharField(choices=[('logistic_regression', 'Logistic Regression'), ('random_forest', 'Random Forest'), ('gradient_boosting', 'Gradient Boosting'), ('neural_network', 'Neural Network')], max_length=50)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('training_status', models.CharField(choices=[('not_trained', 'Not Trained'), ('training', 'Training'), ('trained', 'Trained'), ('failed', 'Failed')], default='not_trained', max_length=20)),
                ('training_data_count', models.IntegerField(default=0)),
                ('training_started_at', models.DateTimeField(blank=True, null=True)),
                ('training_completed_at', models.DateTimeField(blank=True, null=True)),
                ('hyperparameters', models.JSONField(blank=True, default=dict)),
                ('feature_importance', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trained_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ML Model',
                'verbose_name_plural': 'ML Models',
                'db_table': 'ml_models',
                'ordering': ['-created_at'],
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='ModelTrainingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_config', models.JSONField(default=dict, help_text='Training configuration parameters')),
                ('dataset_filter', models.JSONField(blank=True, default=dict, help_text='Filters applied to training dataset')),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='queued', max_length=20)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('logs', models.TextField(blank=True)),
                ('error_message', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_jobs', to='predictions.mlmodel')),
                ('started_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Model Training Job',
                'verbose_name_plural': 'Model Training Jobs',
                'db_table': 'model_training_jobs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='PredictionBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_students', models.IntegerField(default=0)),
                ('processed_students', models.IntegerField(default=0)),
                ('failed_predictions', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.mlmodel')),
            ],
            options={
                'verbose_name': 'Prediction Batch',
                'verbose_name_plural': 'Prediction Batches',
                'db_table': 'prediction_batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dropout_probability', models.FloatField(help_text='Probability of dropping out (0-1)')),
                ('predicted_gpa', models.FloatField(blank=True, help_text='Predicted GPA', null=True)),
                ('risk_category', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk')], max_length=20)),
                ('performance_category', models.CharField(blank=True, choices=[('NP', 'Not Passed'), ('PP', 'Passed'), ('AB', 'Absent')], max_length=10, null=True)),
                ('confidence_score', models.FloatField(help_text='Model confidence (0-1)')),
                ('contributing_factors', models.JSONField(blank=True, default=dict, help_text='Factors contributing to prediction')),
                ('predicted_at', models.DateTimeField(auto_now_add=True)),
                ('is_latest', models.BooleanField(default=True, help_text='Is this the latest prediction for this student')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='predictions.mlmodel')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='student_data.studentrecord')),
            ],
            options={
                'verbose_name': 'Student Prediction',
                'verbose_name_plural': 'Student Predictions',
                'db_table': 'student_predictions',
                'ordering': ['-predicted_at'],
                'indexes': [models.Index(fields=['risk_category'], name='student_pre_risk_ca_8e5525_idx'), models.Index(fields=['is_latest'], name='student_pre_is_late_12cea6_idx'), models.Index(fields=['predicted_at'], name='student_pre_predict_3ecea7_idx')],
            },
        ),
    ]
